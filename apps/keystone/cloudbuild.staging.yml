steps:
  - name: gcr.io/cloud-builders/gcloud
    id: 'Write .env'
    entrypoint: 'bash'
    args: ['-c', 'touch .env.staging']

  - name: gcr.io/cloud-builders/gcloud
    id: 'Write .env 2'
    entrypoint: 'bash'
    args: ['-c', 'echo $$ENV_FILE > .env.staging']
    secretEnv: ['ENV_FILE']
    waitFor: ['Write .env']

  - name: gcr.io/cloud-builders/gcloud
    id: 'Debug 1'
    entrypoint: 'bash'
    args: ['-c', 'ls -la']
    waitFor: ['Write .env 2']

  - name: gcr.io/cloud-builders/gcloud
    id: 'Debug 2'
    entrypoint: 'bash'
    args: ['-c', 'cat .env.staging']
    waitFor: ['Debug 1']

  # # Install Cloud SQL proxy
  # - id: proxy-install
  #   name: gcr.io/cloud-builders/yarn
  #   entrypoint: sh
  #   args:
  #     - '-c'
  #     - 'wget https://storage.googleapis.com/cloudsql-proxy/v1.20.1/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy && chmod +x cloud_sql_proxy'
  #   waitFor: ['-']

  # # Migrate database schema to the latest version
  # # https://knexjs.org/#Migrations-CLI
  # - id: start-proxy
  #   name: gcr.io/cloud-builders/gcloud
  #   entrypoint: sh
  #   args:
  #     - '-c'
  #     - './cloud_sql_proxy -dir=/workspace/cloudsql -instances=bedbug-365120:us-central1:bedbug'
  #   timeout: '1200s'
  #   waitFor: ['proxy-install']

  # - id: debug
  #   name: 'ubuntu'
  #   entrypoint: 'bash'
  #   args: ['-c', 'sleep 5 && pwd && ls -la cloudsql']
  #   waitFor: ['-']

  # Build from Dockerfile
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Container Image'
    args:
      - 'build'
      - '--file=./apps/keystone/Dockerfile.staging'
      - '-t'
      - 'gcr.io/$PROJECT_ID/bedbug-keystone:$COMMIT_SHA'
      - '--build-arg'
      - 'ENV_FILE=$$ENV_FILE'
      - '.'
    waitFor: ['Debug 2']
    secretEnv: ['ENV_FILE']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Container Image To Registry'
    args: ['push', 'gcr.io/$PROJECT_ID/bedbug-keystone:$COMMIT_SHA']
    waitFor: ['Build Container Image']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run',
        'deploy',
        'bedbug-keystone',
        '--image',
        'gcr.io/$PROJECT_ID/bedbug-keystone:$COMMIT_SHA',
        '--region',
        'us-central1',
      ]
    waitFor: ['Push Container Image To Registry']
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/bedbug-staging-env/versions/latest
      env: 'ENV_FILE'

images: ['gcr.io/bedbug-365120/bedbug-keystone:$COMMIT_SHA']
